SELECT * FROM BIT_DB.JanSales LIMIT 20;

SELECT * FROM BIT_DB.FebSales LIMIT 20;

SELECT * FROM BIT_DB.customers LIMIT 20;


--How many orders were placed in January?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--How many of those orders were for an iPhone?
SELECT COUNT(Product)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID';

--Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum 
FROM BIT_DB.customers c
INNER JOIN FebSales f
ON c.order_id = f.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT min(price) FROM BIT_DB.JanSales);

--What is the total revenue for each product sold in January? 
SELECT SUM(quantity)*price as revenue, product
FROM BIT_DB.JanSales
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(quantity), Product, SUM(quantity)*price as revenue 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum), avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
